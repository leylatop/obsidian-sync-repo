import esbuild from "esbuild";
import process from "process";
import builtins from "builtin-modules";

const banner =
`/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/
`;

const prod = (process.argv[2] === "production");
const plugins = [{
  name: 'watcher-plugin',
  setup(build) {
    build.onEnd(async result => {
      // 每次编译成功后，执行.ci/copy-script-to-workspace.sh 脚本
      const { exec } = await import('child_process');
      exec('sh .ci/copy-script-to-workspace.sh', (err, stdout, stderr) => {
        if (err) {
          console.log(err);
          return;
        }
        console.log('复制成功！');
      })
    });
  },
}];
const context = await esbuild.context({
	banner: {
		js: banner,
	},
	entryPoints: ["main.ts"],
	bundle: true,
	external: [
		"obsidian",
		"electron",
		"@codemirror/autocomplete",
		"@codemirror/collab",
		"@codemirror/commands",
		"@codemirror/language",
		"@codemirror/lint",
		"@codemirror/search",
		"@codemirror/state",
		"@codemirror/view",
		"@lezer/common",
		"@lezer/highlight",
		"@lezer/lr",
		...builtins],
	format: "cjs",
	target: "es2018",
	logLevel: "info",
	sourcemap: prod ? false : "inline",
	treeShaking: true,
	outfile: "main.js",
  plugins
});

if (prod) {
	await context.rebuild();
	process.exit(0);
} else {
	await context.watch();
}